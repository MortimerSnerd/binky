// Not meant to be run, but just compiled to see if there
// any functions that can't be used because of Zig's temporary
// holes in the ABI support.   (the biggest culprit right now is passing
// structs <= 16bytes by value.
//
// TODO If there is a ABI problem, the compiler will fail with a
//    "TODO" error mentioning the ABI problem.  At the moment, the
//    abitest won't link, possibly because I misunderstand the pkg support,
//    but also maybe because the support isn't fully baked.  Revisit once
//    the package system is more in place.
const std = @import("std");
const warn = std.debug.warn;
const rl = @import("raylib");

pub fn main() void {
    warn("This file isn't really executable, it's just a compile test.\nPrepare to explode.\n", .{});

    // Vars we can pass to functions without specifying data members.
    var npatch: rl.NPatchInfo = undefined;
    var body: rl.PhysicsBody = undefined;
    var modelAnimation: rl.ModelAnimation = undefined;
    var astream: rl.AudioStream = undefined;
    var wave: rl.Wave = undefined;
    var music: rl.Music = undefined;
    var sound: rl.Sound = undefined;
    var vrdi: rl.VrDeviceInfo = undefined;
    var shader: rl.Shader = undefined;
    var matrix: rl.Matrix = undefined;
    var bb: rl.BoundingBox = undefined;
    var mat: rl.Material = undefined;
    var model: rl.Model = undefined;
    var mesh: rl.Mesh = undefined;
    var ray: rl.Ray = undefined;
    var font: rl.Font = undefined;
    var rect: rl.Rectangle = undefined;
    var tlc: rl.TraceLogCallback = undefined;
    var rtext: rl.RenderTexture2D = undefined;
    var cam2: rl.Camera2D = undefined;
    var cam3: rl.Camera3D = undefined;
    var v2: rl.Vector2 = undefined;
    var v3: rl.Vector3 = undefined;
    var v4: rl.Vector4 = undefined;
    var color: rl.Color = undefined;
    const string = "bork";
    var image: rl.Image = undefined;
    var txt: rl.Texture2D = undefined;

    rl.BeginBlendMode(1);
    rl.BeginDrawing();
    rl.BeginMode2D(cam2);
    rl.BeginMode3D(cam3);
    rl.BeginScissorMode(1, 1, 1, 1);
    rl.BeginShaderMode(shader);
    rl.BeginTextureMode(rtext);
    rl.BeginVrDrawing();
    _ = rl.CheckCollisionBoxSphere(bb, v3, 1.0);
    _ = rl.CheckCollisionCircleRec(v2, 1.0, rect);
    _ = rl.CheckCollisionCircles(v2, 1.0, v2, 1.0);
    _ = rl.CheckCollisionPointCircle(v2, v2, 1.0);
    _ = rl.CheckCollisionPointRec(v2, rect);
    _ = rl.CheckCollisionPointTriangle(v2, v2, v2, v2);
    _ = rl.CheckCollisionRaySphereEx(ray, v3, 1.0, null);
    _ = rl.CheckCollisionRaySphere(ray, v3, 1.0);
    _ = rl.CheckCollisionSpheres(v3, 1.0, v3, 1.0);
    rl.ClearBackground(color);
    rl.ClearDirectoryFiles();
    rl.ClearDroppedFiles();
    rl.CloseAudioDevice();
    rl.CloseAudioStream(astream);
    rl.ClosePhysics();
    rl.CloseVrSimulator();
    rl.CloseWindow();
    _ = rl.CodepointToUtf8(1, null);
    _ = rl.ColorFromHSV(v3);
    _ = rl.ColorFromNormalized(v4);
    _ = rl.ColorNormalize(color);
    _ = rl.ColorToHSV(color);
    _ = rl.ColorToInt(color);
    _ = rl.CompressData(null, 1, null);
    _ = rl.CreatePhysicsBodyCircle(v2, 1.0, 1.0);
    _ = rl.CreatePhysicsBodyPolygon(v2, 1.0, 1, 1.0);
    _ = rl.CreatePhysicsBodyRectangle(v2, 1.0, 1.0, 1.0);
    _ = rl.DecompressData(null, 1, null);
    rl.DestroyPhysicsBody(body);
    rl.DisableCursor();
    _ = rl.DrawBillboard(cam3, txt, v3, 1.0, color);
    _ = rl.DrawBillboardRec(cam3, txt, rect, v3, 1.0, color);
    rl.DrawBoundingBox(bb, color);
    rl.DrawCircle(1, 1, 1.0, color);
    _ = rl.DrawCircle3D(v3, 1.0, v3, 1.0, color);
    rl.DrawCircleGradient(1, 1, 1.0, color, color);
    rl.DrawCircleLines(1, 1, 1.0, color);
    _ = rl.DrawCircleSectorLines(v2, 1.0, 1, 1, 1, color);
    _ = rl.DrawCircleSector(v2, 1.0, 1, 1, 1, color);
    _ = rl.DrawCircleV(v2, 1.0, color);
    rl.DrawCircleV(v2, 1.0, color);
    _ = rl.DrawCubeTexture(txt, v3, 1.0, 1.0, 1.0, color);
    _ = rl.DrawCube(v3, 1.0, 1.0, 1.0, color);
    _ = rl.DrawCubeV(v3, v3, color);
    _ = rl.DrawCubeWires(v3, 1.0, 1.0, 1.0, color);
    _ = rl.DrawCubeWiresV(v3, v3, color);
    _ = rl.DrawCylinder(v3, 1.0, 1.0, 1.0, 1, color);
    _ = rl.DrawCylinderWires(v3, 1.0, 1.0, 1.0, 1, color);
    rl.DrawEllipse(1, 1, 1.0, 1.0, color);
    rl.DrawEllipseLines(1, 1, 1.0, 1.0, color);
    rl.DrawFPS(1, 1);
    _ = rl.DrawGizmo(v3);
    rl.DrawGrid(1, 1.0);
    rl.DrawLine(1, 1, 1, 1, color);
    _ = rl.DrawLine3D(v3, v3, color);
    _ = rl.DrawLineBezier(v2, v2, 1.0, color);
    _ = rl.DrawLineEx(v2, v2, 1.0, color);
    rl.DrawLineStrip(null, 1, color);
    rl.DrawLineStrip(&v2, 1, color);
    _ = rl.DrawLineV(v2, v2, color);
    _ = rl.DrawModelEx(model, v3, v3, 1.0, v3, color);
    _ = rl.DrawModel(model, v3, 1.0, color);
    _ = rl.DrawModelWiresEx(model, v3, v3, 1.0, v3, color);
    _ = rl.DrawModelWires(model, v3, 1.0, color);
    rl.DrawPixel(1, 1, color);
    _ = rl.DrawPixelV(v2, color);
    _ = rl.DrawPlane(v3, v2, color);
    _ = rl.DrawPoint3D(v3, color);
    _ = rl.DrawPolyLines(v2, 1, 1.0, 1.0, color);
    _ = rl.DrawPoly(v2, 1, 1.0, 1.0, color);
    rl.DrawRay(ray, color);
    rl.DrawRectangle(1, 1, 1, 1, color);
    rl.DrawRectangleGradientEx(rect, color, color, color, color);
    rl.DrawRectangleGradientH(1, 1, 1, 1, color, color);
    rl.DrawRectangleGradientV(1, 1, 1, 1, color, color);
    rl.DrawRectangleLines(1, 1, 1, 1, color);
    rl.DrawRectangleLinesEx(rect, 1, color);
    _ = rl.DrawRectanglePro(rect, v2, 1.0, color);
    rl.DrawRectangleRec(rect, color);
    rl.DrawRectangleRoundedLines(rect, 1.0, 1, 1, color);
    rl.DrawRectangleRounded(rect, 1.0, 1, color);
    _ = rl.DrawRectangleV(v2, v2, color);
    _ = rl.DrawRingLines(v2, 1.0, 1.0, 1, 1, 1, color);
    _ = rl.DrawRing(v2, 1.0, 1.0, 1, 1, 1, color);
    _ = rl.DrawSphereEx(v3, 1.0, 1, 1, color);
    _ = rl.DrawSphere(v3, 1.0, color);
    _ = rl.DrawSphereWires(v3, 1.0, 1, 1, color);
    _ = rl.DrawTextCodepoint(font, 1, v2, 1.0, color);
    _ = rl.DrawTextEx(font, string, v2, 1.0, 1.0, color);
    rl.DrawTextRecEx(font, string, rect, 1.0, 1.0, false, color, 1, 1, color, color);
    rl.DrawTextRec(font, string, rect, 1.0, 1.0, false, color);
    rl.DrawText(string, 1, 1, 1, color);
    _ = rl.DrawTextureEx(txt, v2, 1.0, 1.0, color);
    _ = rl.DrawTextureNPatch(txt, npatch, rect, v2, 1.0, color);
    _ = rl.DrawTexturePro(txt, rect, rect, v2, 1.0, color);
    _ = rl.DrawTextureQuad(txt, v2, v2, rect, color);
    _ = rl.DrawTextureRec(txt, rect, v2, color);
    rl.DrawTexture(txt, 1, 1, color);
    _ = rl.DrawTextureV(txt, v2, color);
    rl.DrawTriangleFan(null, 1, color);
    rl.DrawTriangleFan(&v2, 1, color);
    _ = rl.DrawTriangleLines(v2, v2, v2, color);
    rl.DrawTriangleStrip(null, 1, color);
    rl.DrawTriangleStrip(&v2, 1, color);
    _ = rl.DrawTriangle(v2, v2, v2, color);
    rl.EnableCursor();
    rl.EndBlendMode();
    rl.EndDrawing();
    rl.EndMode2D();
    rl.EndMode3D();
    rl.EndScissorMode();
    rl.EndShaderMode();
    rl.EndTextureMode();
    rl.EndVrDrawing();
    rl.ExportImageAsCode(image, string);
    rl.ExportImage(image, string);
    rl.ExportMesh(mesh, string);
    rl.ExportWaveAsCode(wave, string);
    rl.ExportWave(wave, string);
    _ = rl.Fade(color, 1.0);
    _ = rl.GenImageCellular(1, 1, 1);
    _ = rl.GenImageChecked(1, 1, 1, 1, color, color);
    _ = rl.GenImageColor(1, 1, color);
    _ = rl.GenImageFontAtlas(null, null, 1, 1, 1, 1);
    _ = rl.GenImageGradientH(1, 1, color, color);
    _ = rl.GenImageGradientRadial(1, 1, 1.0, color, color);
    _ = rl.GenImageGradientV(1, 1, color, color);
    _ = rl.GenImagePerlinNoise(1, 1, 1, 1, 1.0);
    _ = rl.GenImageWhiteNoise(1, 1, 1.0);
    _ = rl.GenMeshCube(1.0, 1.0, 1.0);
    _ = rl.GenMeshCubicmap(image, v3);
    _ = rl.GenMeshCylinder(1.0, 1.0, 1);
    _ = rl.GenMeshHeightmap(image, v3);
    _ = rl.GenMeshHemiSphere(1.0, 1, 1);
    _ = rl.GenMeshKnot(1.0, 1.0, 1, 1);
    _ = rl.GenMeshPlane(1.0, 1.0, 1, 1);
    _ = rl.GenMeshPoly(1, 1.0);
    _ = rl.GenMeshSphere(1.0, 1, 1);
    _ = rl.GenMeshTorus(1.0, 1.0, 1, 1);
    _ = rl.GenTextureBRDF(shader, 1);
    _ = rl.GenTextureCubemap(shader, txt, 1);
    _ = rl.GenTextureIrradiance(shader, txt, 1);
    rl.GenTextureMipmaps(null);
    _ = rl.GenTexturePrefilter(shader, txt, 1);
    _ = rl.GetCameraMatrix2D(cam2);
    _ = rl.GetCameraMatrix(cam3);
    _ = rl.GetClipboardText();
    _ = rl.GetCodepointsCount(string);
    _ = rl.GetCodepoints(string, null);
    _ = rl.GetCollisionRayGround(ray, 1.0);
    _ = rl.GetCollisionRayModel(ray, model);
    _ = rl.GetCollisionRayTriangle(ray, v3, v3, v3);
    _ = rl.GetCollisionRec(rect, rect);
    _ = rl.GetColor(1);
    _ = rl.GetDirectoryFiles(string, null);
    _ = rl.GetDirectoryPath(string);
    _ = rl.GetDroppedFiles(null);
    _ = rl.GetExtension(string);
    _ = rl.GetFileModTime(string);
    _ = rl.GetFileName(string);
    _ = rl.GetFileNameWithoutExt(string);
    _ = rl.GetFontDefault();
    _ = rl.GetFPS();
    _ = rl.GetFrameTime();
    _ = rl.GetGamepadAxisCount(1);
    _ = rl.GetGamepadAxisMovement(1, 1);
    _ = rl.GetGamepadButtonPressed();
    _ = rl.GetGamepadName(1);
    _ = rl.GetGestureDetected();
    _ = rl.GetGestureDragAngle();
    _ = rl.GetGestureDragVector();
    _ = rl.GetGestureHoldDuration();
    _ = rl.GetGesturePinchAngle();
    _ = rl.GetGesturePinchVector();
    _ = rl.GetGlyphIndex(font, 1);
    _ = rl.GetImageAlphaBorder(image, 1.0);
    _ = rl.GetImageData(image);
    _ = rl.GetImageDataNormalized(image);
    _ = rl.GetKeyPressed();
    _ = rl.GetMatrixModelview();
    _ = rl.GetMatrixProjection();
    _ = rl.GetMonitorCount();
    _ = rl.GetMonitorHeight(1);
    _ = rl.GetMonitorName(1);
    _ = rl.GetMonitorPhysicalHeight(1);
    _ = rl.GetMonitorPhysicalWidth(1);
    _ = rl.GetMonitorWidth(1);
    _ = rl.GetMousePosition();
    _ = rl.GetMouseRay(v2, cam3);
    _ = rl.GetMouseWheelMove();
    _ = rl.GetMouseX();
    _ = rl.GetMouseY();
    _ = rl.GetMusicTimeLength(music);
    _ = rl.GetMusicTimePlayed(music);
    _ = rl.GetNextCodepoint(string, null);
    _ = rl.GetPhysicsBodiesCount();
    _ = rl.GetPhysicsBody(1);
    _ = rl.GetPhysicsShapeType(1);
    _ = rl.GetPhysicsShapeVertex(body, 1);
    _ = rl.GetPhysicsShapeVerticesCount(1);
    _ = rl.GetPixelDataSize(1, 1, 1);
    _ = rl.GetPrevDirectoryPath(string);
    _ = rl.GetRandomValue(1, 1);
    _ = rl.GetScreenData();
    _ = rl.GetScreenHeight();
    _ = rl.GetScreenToWorld2D(v2, cam2);
    _ = rl.GetScreenWidth();
    _ = rl.GetShaderDefault();
    _ = rl.GetShaderLocation(shader, string);
    _ = rl.GetShapesTexture();
    _ = rl.GetShapesTextureRec();
    _ = rl.GetSoundsPlaying();
    _ = rl.GetTextureData(txt);
    _ = rl.GetTextureDefault();
    _ = rl.GetTime();
    _ = rl.GetTouchPointsCount();
    _ = rl.GetTouchPosition(1);
    _ = rl.GetTouchX();
    _ = rl.GetTouchY();
    _ = rl.GetWaveData(wave);
    _ = rl.GetWindowHandle();
    _ = rl.GetWindowPosition();
    _ = rl.GetWorkingDirectory();
    _ = rl.GetWorldToScreen2D(v2, cam2);
    _ = rl.GetWorldToScreenEx(v3, cam3, 1, 1);
    _ = rl.GetWorldToScreen(v3, cam3);
    _ = rl.GuiColorPicker(rect, color);
    _ = rl.GuiComboBox(rect, string, 1);
    rl.GuiDisable();
    rl.GuiDummyRec(rect, string);
    rl.GuiEnable();
    rl.GuiFade(1.0);
    rl.GuiFont(font);
    _ = rl.GuiGetStyle(1, 1);
    _ = rl.GuiGrid(rect, 1.0, 1);
    rl.GuiGroupBox(rect, string);
    _ = rl.GuiIconText(1, string);
    rl.GuiLabel(rect, string);
    rl.GuiLine(rect, string);
    rl.GuiLoadStyleDefault();
    rl.GuiLoadStyleProps(null, 1);
    rl.GuiLoadStyle(string);
    rl.GuiLock();
    _ = rl.GuiMessageBox(rect, string, string, string);
    rl.GuiPanel(rect);
    _ = rl.GuiProgressBar(rect, string, 1.0, 1.0, 1.0, false);
    _ = rl.GuiScrollBar(rect, 1, 1, 1);
    _ = rl.GuiScrollPanel(rect, rect, null);
    rl.GuiSetStyle(1, 1, 1);
    _ = rl.GuiSliderBar(rect, string, 1.0, 1.0, 1.0, false);
    _ = rl.GuiSlider(rect, string, 1.0, 1.0, 1.0, false);
    rl.GuiState(1);
    rl.GuiStatusBar(rect, string);
    _ = rl.GuiTextInputBox(rect, string, string, null, string);
    _ = rl.GuiToggleGroup(rect, string, 1);
    rl.GuiUnlock();
    rl.GuiUpdateStyleComplete();
    rl.HideCursor();
    rl.HideWindow();
    rl.ImageAlphaClear(null, color, 1.0);
    rl.ImageAlphaCrop(null, 1.0);
    rl.ImageAlphaMask(null, image);
    rl.ImageAlphaPremultiply(null);
    rl.ImageColorBrightness(null, 1);
    rl.ImageColorContrast(null, 1.0);
    rl.ImageColorGrayscale(null);
    rl.ImageColorInvert(null);
    rl.ImageColorReplace(null, color, color);
    rl.ImageColorTint(null, color);
    _ = rl.ImageCopy(image);
    rl.ImageCrop(null, rect);
    rl.ImageDither(null, 1, 1, 1, 1);
    rl.ImageDraw(null, image, rect, rect, color);
    rl.ImageDrawRectangleLines(null, rect, 1, color);
    rl.ImageDrawRectangle(null, rect, color);
    _ = rl.ImageDrawTextEx(null, v2, font, string, 1.0, 1.0, color);
    _ = rl.ImageDrawText(null, v2, string, 1, color);
    _ = rl.ImageExtractPalette(image, 1, null);
    rl.ImageFlipHorizontal(null);
    rl.ImageFlipVertical(null);
    rl.ImageFormat(null, 1);
    _ = rl.ImageFromImage(image, rect);
    rl.ImageMipmaps(null);
    rl.ImageResizeCanvas(null, 1, 1, 1, 1, color);
    rl.ImageResizeNN(null, 1, 1);
    rl.ImageResize(null, 1, 1);
    rl.ImageRotateCCW(null);
    rl.ImageRotateCW(null);
    _ = rl.ImageTextEx(font, string, 1.0, 1.0, color);
    _ = rl.ImageText(string, 1, color);
    rl.ImageToPOT(null, color);
    rl.InitAudioDevice();
    _ = rl.InitAudioStream(1, 1, 1);
    rl.InitPhysics();
    rl.InitVrSimulator();
    rl.InitWindow(100, 100, "test");
    rl.InitWindow(1, 1, string);
    _ = rl.IsAudioDeviceReady();
    _ = rl.IsCursorHidden();
    _ = rl.IsFileDropped();
    _ = rl.IsPhysicsEnabled();
    _ = rl.IsVrSimulatorReady();
    _ = rl.IsWindowHidden();
    _ = rl.IsWindowMinimized();
    _ = rl.IsWindowReady();
    _ = rl.IsWindowResized();
    _ = rl.LoadFontData(string, 1, null, 1, 1);
    _ = rl.LoadFontEx(string, 1, null, 1);
    _ = rl.LoadFontFromImage(image, color, 1);
    _ = rl.LoadFont(string);
    _ = rl.LoadImageEx(null, 1, 1);
    _ = rl.LoadImagePro(null, 1, 1, 1);
    _ = rl.LoadImageRaw(string, 1, 1, 1, 1);
    _ = rl.LoadImage(string);
    _ = rl.LoadMaterialDefault();
    _ = rl.LoadMaterials(string, null);
    _ = rl.LoadMeshes(string, null);
    _ = rl.LoadModelAnimations(string, null);
    _ = rl.LoadModelFromMesh(mesh);
    _ = rl.LoadModel(string);
    _ = rl.LoadMusicStream(string);
    _ = rl.LoadRenderTexture(1, 1);
    _ = rl.LoadShaderCode(string, string);
    _ = rl.LoadShader(string, string);
    _ = rl.LoadSoundFromWave(wave);
    _ = rl.LoadSound(string);
    _ = rl.LoadText(string);
    _ = rl.LoadTextureCubemap(image, 1);
    _ = rl.LoadTextureFromImage(image);
    _ = rl.LoadTexture(string);
    _ = rl.LoadWave(string);
    _ = rl.MeasureTextEx(font, string, 1.0, 1.0);
    _ = rl.MeasureText(string, 1);
    rl.MeshBinormals(null);
    _ = rl.MeshBoundingBox(mesh);
    rl.MeshTangents(null);
    rl.OpenURL(string);
    rl.PauseAudioStream(astream);
    rl.PauseMusicStream(music);
    rl.PauseSound(sound);
    _ = rl.PhysicsAddForce(body, v2);
    rl.PhysicsAddTorque(body, 1.0);
    _ = rl.PhysicsShatter(body, v2, 1.0);
    rl.PlayAudioStream(astream);
    rl.PlayMusicStream(music);
    rl.PlaySoundMulti(sound);
    rl.PlaySound(sound);
    rl.ResetPhysics();
    rl.ResumeAudioStream(astream);
    rl.ResumeMusicStream(music);
    rl.ResumeSound(sound);
    rl.RunPhysicsStep();
    rl.SetAudioStreamBufferSizeDefault(1);
    rl.SetAudioStreamPitch(astream, 1.0);
    rl.SetAudioStreamVolume(astream, 1.0);
    rl.SetCameraAltControl(1);
    rl.SetCameraMode(cam3, 1);
    rl.SetCameraMoveControls(1, 1, 1, 1, 1, 1);
    rl.SetCameraPanControl(1);
    rl.SetCameraSmoothZoomControl(1);
    rl.SetClipboardText(string);
    rl.SetConfigFlags(1);
    rl.SetExitKey(1);
    rl.SetGesturesEnabled(1);
    rl.SetMasterVolume(1.0);
    rl.SetMaterialTexture(null, 1, txt);
    rl.SetMatrixModelview(matrix);
    rl.SetMatrixProjection(matrix);
    rl.SetModelMeshMaterial(null, 1, 1);
    rl.SetMouseOffset(1, 1);
    rl.SetMousePosition(1, 1);
    rl.SetMouseScale(1.0, 1.0);
    rl.SetMusicLoopCount(music, 1);
    rl.SetMusicPitch(music, 1.0);
    rl.SetMusicVolume(music, 1.0);
    rl.SetPhysicsBodyRotation(body, 1.0);
    rl.SetPhysicsGravity(1.0, 1.0);
    rl.SetPhysicsTimeStep(1.0);
    rl.SetShaderValueMatrix(shader, 1, matrix);
    rl.SetShaderValue(shader, 1, null, 1);
    rl.SetShaderValueTexture(shader, 1, txt);
    rl.SetShaderValueV(shader, 1, null, 1, 1);
    rl.SetShapesTexture(txt, rect);
    rl.SetSoundPitch(sound, 1.0);
    rl.SetSoundVolume(sound, 1.0);
    rl.SetTargetFPS(1);
    rl.SetTextureFilter(txt, 1);
    rl.SetTextureWrap(txt, 1);
    rl.SetTraceLogCallback(tlc);
    rl.SetTraceLogExit(1);
    rl.SetTraceLogLevel(1);
    rl.SetVrConfiguration(vrdi, shader);
    rl.SetWindowIcon(image);
    rl.SetWindowMinSize(1, 1);
    rl.SetWindowMonitor(1);
    rl.SetWindowPosition(1, 1);
    rl.SetWindowSize(1, 1);
    rl.SetWindowTitle(string);
    rl.ShowCursor();
    rl.StopAudioStream(astream);
    rl.StopMusicStream(music);
    rl.StopSoundMulti();
    rl.StopSound(sound);
    _ = rl.StorageLoadValue(1);
    rl.StorageSaveValue(1, 1);
    rl.TakeScreenshot(string);
    rl.TextAppend(null, string, null);
    _ = rl.TextCopy(null, string);
    _ = rl.TextFindIndex(string, string);
    _ = rl.TextInsert(string, string, 1);
    _ = rl.TextJoin(null, 1, string);
    _ = rl.TextLength(string);
    _ = rl.TextReplace(null, string, string);
    _ = rl.TextSplit(string, 'c', null);
    _ = rl.TextSubtext(string, 1, 1);
    _ = rl.TextToInteger(string);
    _ = rl.TextToLower(string);
    _ = rl.TextToPascal(string);
    _ = rl.TextToUpper(string);
    _ = rl.TextToUtf8(null, 1);
    rl.ToggleFullscreen();
    rl.ToggleVrMode();
    rl.UnhideWindow();
    rl.UnloadFont(font);
    rl.UnloadImage(image);
    rl.UnloadMaterial(mat);
    rl.UnloadMesh(mesh);
    rl.UnloadModelAnimation(modelAnimation);
    rl.UnloadModel(model);
    rl.UnloadMusicStream(music);
    rl.UnloadRenderTexture(rtext);
    rl.UnloadShader(shader);
    rl.UnloadSound(sound);
    rl.UnloadTexture(txt);
    rl.UnloadWave(wave);
    rl.UpdateAudioStream(astream, null, 1);
    rl.UpdateCamera(&cam3);
    rl.UpdateCamera(null);
    rl.UpdateModelAnimation(model, modelAnimation, 1);
    rl.UpdateMusicStream(music);
    rl.UpdateSound(sound, null, 1);
    rl.UpdateTexture(txt, null);
    rl.UpdateVrTracking(null);
    _ = rl.WaveCopy(wave);
    rl.WaveCrop(null, 1, 1);
    rl.WaveFormat(null, 1, 1, 1);
    _ = rl.WindowShouldClose();
}

//     rl.TraceLog(1, string, ...)
//    rl.TraceLog(1, string, ...)
//    _ = rl.TextFormat(string, ...);
//    _ = rl.TextFormat(string, ...);
